#pragma once
#include "board.h"
#include "generator.h"

#define OPENING 0
#define MIDGAME 1
#define ENDGAME 2

const int INIT_MIN = -100000000; // -10^9
const int INIT_MAX = 100000000;  // 10^9

static const int PAWN_POSITION[2][64] = {
	// White (Apertura)
	{ 0,  0,  0,  0,  0,  0,  0,  0,
	 50, 50, 50, 50, 50, 50, 50, 50,
	 10, 10, 20, 30, 30, 20, 10, 10,
	  5,  5, 10, 25, 25, 10,  5,  5,
	  0,  0,  0, 20, 20,  0,  0,  0,
	  5, -5,-10,  0,  0,-10, -5,  5,
	  5, 10, 10,-20,-20, 10, 10,  5,
	  0,  0,  0,  0,  0,  0,  0,  0 },
	  // Black (sim√©trico)
	{  0,  0,  0,  0,  0,  0,  0,  0,
	 5, 10, 10,-20,-20, 10, 10,  5,
	 5, -5,-10,  0,  0,-10, -5,  5,
	  0,  0,  0, 20, 20,  0,  0,  0,
	  5,  5, 10, 25, 25, 10,  5,  5,
	 10, 10, 20, 30, 30, 20, 10, 10,
	 50, 50, 50, 50, 50, 50, 50, 50,
	   0,  0,  0,  0,  0,  0,  0,  0 }
};

static const int KNIGHT_POSITION[2][64] = {
	{ -50,-40,-30,-30,-30,-30,-40,-50,
	-40,-20,  0,  5,  5,  0,-20,-40,
	-30,  5, 10, 15, 15, 10,  5,-30,
	-30,  0, 15, 20, 20, 15,  0,-30,
	-30,  5, 15, 20, 20, 15,  5,-30,
	-30,  0, 10, 15, 15, 10,  0,-30,
	-40,-20,  0,  0,  0,  0,-20,-40,
	-50,-40,-30,-30,-30,-30,-40,-50},

	{ -50,-40,-30,-30,-30,-30,-40,-50,
	-40,-20,  0,  0,  0,  0,-20,-40,
	-30,  0, 10, 15, 15, 10,  0,-30,
	-30,  5, 15, 20, 20, 15,  5,-30,
	-30,  0, 15, 20, 20, 15,  0,-30,
	-30,  5, 10, 15, 15, 10,  5,-30,
	-40,-20,  0,  5,  5,  0,-20,-40,
	-50,-40,-30,-30,-30,-30,-40,-50}

};

static const int KING_OPENING_POSITION[2][64] = {
	// Blanco (a1-h1) | Negro (a8-h8) reflejado
	{ -30, -20,  50, -10,  20, -10,  50, -30,
	-40, -30, -20, -20, -20, -20, -30, -40,
	-50, -40, -30, -30, -30, -30, -40, -50,
	-60, -50, -40, -40, -40, -40, -50, -60,
	-60, -50, -40, -40, -40, -40, -50, -60,
	-60, -50, -40, -40, -40, -40, -50, -60,
	-60, -50, -40, -40, -40, -40, -50, -60,
	-30, -20,  50, -10,  20, -10,  50, -30},

	{-30, -20,  50, -10,  20, -10,  50, -30,
	-60, -50, -40, -40, -40, -40, -50, -60,
	-60, -50, -40, -40, -40, -40, -50, -60,
	-60, -50, -40, -40, -40, -40, -50, -60,
	-60, -50, -40, -40, -40, -40, -50, -60,
	-50, -40, -30, -30, -30, -30, -40, -50,
	-40, -30, -20, -20, -20, -20, -30, -40,
	 -30, -20,  50, -10,  20, -10,  50, -30}
};

static const int BISHOP_POSITION[64] = {
	 -20, -10, -10, -10, -10, -10, -10, -20,
	-10,  15,   0,   0,   0,   0,  15, -10,
	-5,  10,  20,  10,  10,  20,  10,  -5,
	-5,   5,  15,  25,  25,  15,   5,  -5,
	-5,   5,  15,  25,  25,  15,   5,  -5,
	-5,  10,  20,  10,  10,  20,  10,  -5,
	-10,  15,   5,   0,   0,   5,  15, -10,
	-20, -10, -10, -10, -10, -10, -10, -20
};

static const int ROOK_POSITION[64] = {
	 5,  0,  0,  25,  25,  0,  0,  5,
	 5, 10, 10,  30,  30, 10, 10,  5,
	-5,  0,  0,  20,  20,  0,  0, -5,
	-5,  0,  0,  20,  20,  0,  0, -5,
	-5,  0,  0,  20,  20,  0,  0, -5,
	-5,  0,  0,  20,  20,  0,  0, -5,
	 5, 10, 10,  30,  30, 10, 10,  5,
	 5,  0,  0,  25,  25,  0,  0,  5
};

static const int QUEEN_POSITION[64] = {
		-20, -10, -10,  -5,  -5, -10, -10, -20,
		-10,   0,   5,   0,   0,   0,   0, -10,
		-10,  10,  15,  15,  15,  15,   5, -10,
		  0,   0,  15,  20,  20,  15,   0,  -5,
		 -5,   5,  15,  20,  20,  15,   5,  -5,
		-10,   0,  10,  15,  15,  10,   0, -10,
		-10,   5,   0,   0,   0,   0,   5, -10,
		-20, -10, -10,  -5,  -5, -10, -10, -20
};

static const int QUEEN_OPENING_POSITION[2][64] = {
	{
		   0,   0,   0,   0,   0,   0,   0,   0,
		 -10,   5,  15,  20,  20,  15,   5, -10,
		 -20, -10,   5,  10,  10,   5, -10, -20,
		 -30, -20, -10,   0,   0, -10, -20, -30,
		 -50, -40, -30, -20, -20, -30, -40, -50,
		-100, -90, -80, -70, -70, -80, -90,-100,
		-150,-130,-120,-110,-110,-120,-130,-150,
		-200,-180,-160,-150,-150,-160,-180,-200
	},
	{
		-200,-180,-160,-150,-150,-160,-180,-200,
		-150,-130,-120,-110,-110,-120,-130,-150,
		-100, -90, -80, -70, -70, -80, -90,-100,
		 -50, -40, -30, -20, -20, -30, -40, -50,
		 -30, -20, -10,   0,   0, -10, -20, -30,
		 -20, -10,   5,  10,  10,   5, -10, -20,
		 -10,   5,  15,  20,  20,  15,   5, -10,
		   0,   0,   0,   0,   0,   0,   0,   0
	}
};


class Evaluation {

public:
    static int EvaluateGame(const Board& );

private:
   

static int evaluateColor(bool,const Board& );

static int materialEvaluation(bool,const Board&);
static int pieceActivityEvaluation(bool,const Board& );

static int centerControlEvaluation(bool,const Board&);
static int mobilityEvaluation(bool,const Board&);
static int kingSafetyEvaluation(bool,const Board&);
static int pawnStructureEvaluation(bool,const Board&);
static int bishopPairEvaluation(bool,const Board&);
static int rookOpenFileEvaluation(bool,const Board&);
static int badBishopEvaluation(bool,const Board&);
static int seventhRankEvaluation(bool,const Board&);

static int gamePhase(const Board&);
static int positionalEvaluation(bool,const Board&);

};





